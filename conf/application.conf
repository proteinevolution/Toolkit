include "tel"
include "tools"
include "blacklist"

#Name of the node where the Toolkit is running
host_name = "olt"
host_name = ${?CONFIGURED_HOSTNAME} # beware that $HOSTNAME is a shell variable and cannot be directly used
port = 1234
port = ${?CONFIGURED_PORT}

akka {
  jvm-exit-on-fatal-error = false
  loglevel = "DEBUG"
  remote {
    netty.tcp {
      hostname = localhost        # external (logical) hostname
      port = 1234                 # external (logical) port

      bind-hostname = 174.18.0.2  # internal (bind) hostname
      bind-port = 1234            # internal (bind) port
    }
  }
}

# Play http configuration
# ~~~~~
play.http {
  # The secret key is used to secure cryptographics functions.
  # If you deploy your application to several instances be sure to use the same key!
  secret.key = "changeme"
  secret.key = ${?APPLICATION_SECRET}

  # Set POST max text size
  parser.maxMemoryBuffer = 64000k

  router = MainRouter

  # session cookie config
  session {

    # Cookie maximum age in ms
    maxAge = 1209600000 # 14 days

    # allow client side session cookie
    httpOnly = false
  }
}


# Actors
play.modules {
  enabled += "modules.ActorModule"
  enabled += "play.modules.reactivemongo.ReactiveMongoModule"
  enabled += "de.proteinevolution.cluster.ClusterModule"
}


# The application languages
# ~~~~~
play.i18n.langs = ["en"]


# Play Framework cache name definitons
# ~~~~~
play.cache {
  createBoundCaches = false
  bindCaches = ["userCache", "wsActorCache", "resultCache"]
}


# Play Framework filters config
# ~~~~~
play.filters {
  # actually added in /app/Filters.scala
  enabled += play.filters.cors.CORSFilter

  # CSRF Configuration
  csrf {
    cookie.name = "CSRF-Token"
    header.name = "X-CSRF-Token"
  }

  # CORS Configuration (does not apply for proxied frontend)
  cors {
    # The path prefixes to filter. TODO restrict
    pathPrefixes = ["/"]

    # The allowed origins. If null, all origins are allowed. TODO restrict some more
    allowedOrigins = null

    # The allowed HTTP methods. If null, all methods are allowed.
    allowedHttpMethods = ["GET"]

    # The allowed HTTP headers. If null, all headers are allowed.
    allowedHttpHeaders = ["Accept"]

    # The exposed headers
    exposedHeaders = ["Access-Control-Allow-Origin"]

    # Whether to support credentials
    supportsCredentials = true

    # The maximum amount of time the CORS meta data should be cached by the client
    preflightMaxAge = 3 days

    # Whether to serve forbidden origins as non-CORS requests
    serveForbiddenOrigins = false
  }

  # GZip filter configuration
  gzip {

    # The buffer size to use for gzipped bytes
    bufferSize = 8k

    # The maximum amount of content to buffer for gzipping in order to calculate the content length before falling back
    # to chunked encoding.
    chunkedThreshold = 100k
  }
}


# Play Framework assets configuration
# ~~~~~
play.assets {
  path = "/public"
  urlPrefix = "/assets"
}


# Mailer
# ~~~~~
# This configures the E-Mail server connection
play.mailer {
  host = localhost
  host = ${?MAIL_HOST}
  port = 25
  port = ${?MAIL_PORT}
  ssl = false
  ssl = ${?MAIL_SSL}
  tls = false
  tls = ${?MAIL_TLS}
  user = ${?MAIL_USER}
  password = ${?MAIL_PWD}
}

play.application.loader = ToolkitAppLoader

play.allowGlobalApplication = true

####################################################################################

# geoIP
maxmind_db = "/root/data/GeoLite2-City.mmdb"
maxmind_db = ${?MAXMIND_DB}

# mongo address with auth for local docker
mongodb.uri = "mongodb://mongodb:27017/tkplay_dev"
mongodb.uri = ${?MONGODB_URI}

modeller_key = ""
modeller_key = ${?MODELLER_KEY}

# scripts
server_scripts = "lib/"
server_scripts = ${?SCRIPT_URL}

job_path = "development"
job_path = ${?JOB_PATH}

# return host for mail links
mail.host = "http://localhost:8080/"

db_root = "/root/Toolkit/databases"

bioprogs_root = "/root/Toolkit/bioprogs"

# Set the full path to this file in application-ext.conf
# The SGE nodes will need the full path to source this file.
environment = "/root/Toolkit/tel/env/environment.sh"

# Decide whether to submit jobs to the cluster system (sge) or to run them locally (local).
# However, qstat-related functions (e.g. cluster load calculation) will not work in this mode.
submit_mode=sge

# Ignore our monitoring service when requesting new user from session service and don't update it in the DB
user_creation.ignore_ips = ["10.3.7.70"]

# Accessible SGE nodes for execution of jobs
# e.g. "'node502|node503|node504'"
sge_nodes = "'*'"

# what to override in application-ext.conf
# play.http.secret.key = ""
# play.mailer.host = localhost
# play.mailer.user = ""
# play.mailer.password = ""
# modeller_key = ""
# mongodb.uri = ""
# environment = "" !! absolute path !!

# include extending file with secrets
include "application-ext"

tel.env {
  HOSTNAME = ${host_name}
  PORT = ${port}
  BIOPROGSROOT = ${bioprogs_root}
  DATABASES = ${db_root}
  SGENODES = ${sge_nodes}
  SUBMITMODE = ${submit_mode}

  HHSUITE  = ${db_root}/hh-suite
  UNIREF = ${db_root}/hhblits/UniRef30
  STANDARD = ${db_root}/standard
  CIF      = ${db_root}/pdb/mmcif/70
  CIFALL   = ${db_root}/pdb/mmcif/all
  HHOMP    = ${db_root}/hhomp/db
  HHBLITS  = ${db_root}/hhblits/
  SCOPE    = ${db_root}/hh-suite/scope70/pdb
  ECOD     = ${db_root}/hh-suite/ECOD/pdb

  ENVIRONMENT = ${environment}
  HELPER = ${bioprogs_root}"/helpers"
  PERLLIB  = ${bioprogs_root}"/lib"
}
