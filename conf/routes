# Routes
# This file defines all application routes (Higher priority routes first)

############################################################################
# Toolkit routes
############################################################################

# Index Page
GET           /                                       controllers.Application.index()
GET           /javascriptRoutes                       controllers.Application.javascriptRoutes
GET           /sitemap.xml                            controllers.Assets.at(path="/public", file = "sitemap.xml")

# integrated mithril route backend routes
GET           /backend/index                          controllers.Backend.index
GET           /backend/statistics                     controllers.Backend.statistics
GET           /backend/runusersweep                   controllers.Backend.runUserSweep
GET           /backend/runjobsweep                    controllers.Backend.runJobSweep
GET           /backend/users                          controllers.Backend.users
POST          /backend/users                          controllers.Backend.users

# Websocket
GET           /ws                                     controllers.Application.ws

# Maintenance
GET           /maintenance                            controllers.Application.maintenanceTest
POST          /maintenance                            controllers.Application.maintenance
GET           /uptime                                 controllers.UptimeController.uptime
GET           /buildinfo                              controllers.UptimeController.buildInfo

# Serve files
GET           /files/:mainID/:filename                controllers.Application.file(filename: String, mainID: String)

# WebJars
->            /webjars                                webjars.Routes

# Assets
GET           /assets/*file                           controllers.Assets.versioned(path="/public", file: Asset)

# Route for direct get requests
GET           /hhpred                                 controllers.Application.showTool(toolname = "hhpred")
GET           /tools/:toolname                        controllers.Application.showTool(toolname: String)

# Redirects to a job with the jobID // mainID
GET           /jobs/:idString                         controllers.Application.showJob(idString: String)

# Routes for Auth Service
GET           /userData                               controllers.Auth.getUserData
POST          /signin                                 controllers.Auth.signInSubmit()
POST          /signup                                 controllers.Auth.signUpSubmit()
GET           /signout                                controllers.Auth.signOut()
POST          /resetPassword                          controllers.Auth.resetPassword
POST          /resetPasswordChange                    controllers.Auth.resetPasswordChange
POST          /profile                                controllers.Auth.profileSubmit()
POST          /password                               controllers.Auth.passwordChangeSubmit()
POST          /profile/submit/userData/               controllers.Auth.profileSubmit()
POST          /profile/submit/password/               controllers.Auth.passwordChangeSubmit()
GET           /verification/:userName/:token          controllers.Auth.verification(userName : String, token : String)
GET           /getCurrentUser                         controllers.Auth.profile2json()

# Update Job status (should be server internal access only)
PUT          /jobs/done/:jobID/:key                   controllers.Jobs.jobStatusDone(jobID : String, key: String)
PUT          /jobs/error/:jobID/:key                  controllers.Jobs.jobStatusError(jobID : String, key: String)
PUT          /jobs/running/:jobID/:key                controllers.Jobs.jobStatusRunning(jobID : String, key: String)
PUT          /jobs/queued/:jobID/:key                 controllers.Jobs.jobStatusQueued(jobID : String, key: String)
PUT          /jobs/sge/:jobID/:sgeID/:key             controllers.Jobs.SGEID(jobID: String, sgeID: String, key: String)
PUT          /jobs/dateviewed/:mainID                 controllers.Jobs.updateDateViewed(mainID)

# update process log
PUT          /jobs/updateLog/:jobID                   controllers.Jobs.updateLog(jobID : String)

# Validation Controller
POST          /validate/modeller                      controllers.Auth.validateModellerKey(input: String)

# Cluster
GET           /load                                   controllers.ClusterController.getLoad

# Static route
GET           /static/get/:static                     controllers.Service.static(static : String)

# Search controller access
GET           /jobs                                   controllers.Search.get
GET           /indexPageInfo                          controllers.Search.getIndexPageInfo
GET           /search/checkJobID/:jobID               controllers.Search.checkJobID(jobID : String, resubmitJobID : Option[String])
GET           /getToolList                            controllers.Search.getToolList
GET           /suggest/:jobID                         controllers.Search.autoComplete(jobID: String)
GET           /checktool/:tool                        controllers.Search.existsTool(tool: String)

# ForwardModal
GET           /forwardModal/:toolName/:modalType      controllers.ForwardModalController.getForwardModalOptions(modalType: String, toolName: String)
# Help
GET           /getHelp/:tool                          controllers.DataController.getHelp(tool: String)
# static index bottom section
GET           /recent-updates                         controllers.DataController.recentUpdates

# Routes for static assets
GET           /robots.txt                             controllers.Application.robots
GET           /:static                                controllers.Application.static(static : String)

# GetTool
GET           /api/tools/:toolname                    controllers.Service.getTool(toolname)

# Get list of userjobs
GET           /api/jobs                               controllers.JobController.listJobs

# Submit a job directly
POST          /api/job                                controllers.JobController.submitJob(toolName: String)
GET           /api/job/:jobID/start                   controllers.JobController.startJob(jobID: String)
GET           /api/job/:jobID/checkHash               controllers.JobController.checkHash(jobID: String)
GET           /api/job/:jobID                         controllers.Service.getJob(jobID)
GET           /api/job/result/:jobID/:tool/:panel     controllers.Service.getResult(jobID : String, tool: String, panel: String)
DELETE        /api/job/:jobID                         controllers.JobController.delete(jobID)
GET           /api/job/load/:jobID                    controllers.JobController.loadJob(jobID: String)

# Frontend Stuff
POST          /api/frontendSubmit/:toolname           controllers.Tool.frontendCount(toolname: String)

# Results
GET           /api/job/results/:jobID                 controllers.DataController.get(jobID: String)

# Tool Module
->            /results                                de.proteinevolution.tools.ToolsRouter